{
  "_args": [
    [
      {
        "raw": "electron-editor-context-menu@https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
        "scope": null,
        "escapedName": "electron-editor-context-menu",
        "name": "electron-editor-context-menu",
        "rawSpec": "https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
        "spec": "https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
        "type": "remote"
      },
      "/projets/betatrjs"
    ]
  ],
  "_from": "https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
  "_id": "electron-editor-context-menu@1.1.1",
  "_inCache": true,
  "_location": "/electron-editor-context-menu",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron-editor-context-menu@https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
    "scope": null,
    "escapedName": "electron-editor-context-menu",
    "name": "electron-editor-context-menu",
    "rawSpec": "https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
    "spec": "https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
  "_shasum": "2621fdf291dddae5a5bb58f7dc1ebb64816f3804",
  "_shrinkwrap": null,
  "_spec": "electron-editor-context-menu@https://github.com/christopheparisse/electron-editor-context-menu/tarball/master",
  "_where": "/projets/betatrjs",
  "author": {
    "name": "Jeff Wear",
    "email": "jeff@mixmax.com",
    "url": "https://mixmax.com"
  },
  "bugs": {
    "url": "https://github.com/mixmaxhq/electron-editor-context-menu/issues"
  },
  "dependencies": {
    "lodash.clonedeep": "^4.3.0",
    "lodash.defaults": "^4.0.1",
    "lodash.isarray": "^4.0.0",
    "lodash.isempty": "^4.1.2",
    "lodash.isfunction": "^3.0.8"
  },
  "description": "Enable the native right-click menu in Electron.",
  "devDependencies": {},
  "directories": {
    "doc": "docs"
  },
  "homepage": "https://github.com/mixmaxhq/electron-editor-context-menu#readme",
  "keywords": [
    "electron",
    "context",
    "menu",
    "contextmenu",
    "right-click",
    "spell-check",
    "spell",
    "check"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "name": "electron-editor-context-menu",
  "optionalDependencies": {},
  "readme": "# electron-editor-context-menu\n\nIn Electron, right-clicking in text editors doesâ€¦ nothing.\n\nThis module enables the menu you'd expect, with optional\n[spell-checker integration][spell-checker integration].\n\n<img src=\"docs/menu.png\" height=\"300\" alt=\"menu\">\n\n## Installation\n\n```js\nnpm install electron-editor-context-menu --save\n```\n\n## Usage\n\n```js\n// In the renderer process:\nvar remote = require('electron').remote;\n// `remote.require` since `Menu` is a main-process module.\nvar buildEditorContextMenu = remote.require('electron-editor-context-menu');\n\nwindow.addEventListener('contextmenu', function(e) {\n  // Only show the context menu in text editors.\n  if (!e.target.closest('textarea, input, [contenteditable=\"true\"]')) return;\n\n  var menu = buildEditorContextMenu();\n\n  // The 'contextmenu' event is emitted after 'selectionchange' has fired but possibly before the\n  // visible selection has changed. Try to wait to show the menu until after that, otherwise the\n  // visible selection will update after the menu dismisses and look weird.\n  setTimeout(function() {\n    menu.popup(remote.getCurrentWindow());\n  }, 30);\n});\n```\n\n### Spell-checker integration\n\nShow spelling suggestions by passing a _selection_ object when building the menu:\n\n```js\nvar selection = {\n  isMisspelled: true,\n  spellingSuggestions: [\n    'men',\n    'mean',\n    'menu'\n  ]\n};\n\nvar menu = buildEditorContextMenu(selection);\n```\n\nGet these suggestions when your [spell-check provider][setSpellCheckProvider] runs\n&mdash;Electron will poll it immediately before the `'contextmenu'` event fires.\n\nFor a complete example using `electron-spell-check-provider`, see\n[here][spell-checker integration example].\n\n### Customizing the menu\n\nYou can add or remove items to the menu, or replace it entirely, by providing\n`mainTemplate` and/or `suggestionsTemplate` parameters when building the menu:\n\n```js\nvar menu = buildEditorContextMenu(selection, mainTemplate, suggestionsTemplate);\n```\n\nThe `mainTemplate` parameter customizes the always-present menu items; the\n`suggestionsTemplate` parameter customizes the spelling suggestion items.\nPass an array of items to replace the default items entirely; pass a function\nto add/remove/edit the default items. The function will be passed the default\narray of items as a parameter and should return an array of items.\n\n## Credits\n\nCreated by [Jeff Wear][Jeff Wear].\n\nThanks to https://github.com/atom/electron/pull/942#issuecomment-171445954 for\nthe initial sketch of this.\n\n## Copyright and License\n\nCopyright 2016 Mixmax, Inc., licensed under the MIT License.\n\n[spell-checker integration]: #spell-checker-integration\n[setSpellCheckProvider]: https://github.com/atom/electron/blob/master/docs/api/web-frame.md#webframesetspellcheckproviderlanguage-autocorrectword-provider\n[spell-checker integration example]: https://github.com/mixmaxhq/electron-spell-check-provider#but-how-do-i-show-spelling-suggestions-in-the-context-menu\n[Jeff Wear]: https://github.com/wearhere\n\n## Release History\n\n* 1.1.1 Fix compatibility with electron-builder\n* 1.1.0 Add the ability to customize the main template and the suggestions template.\n* 1.0.0 Initial release.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mixmaxhq/electron-editor-context-menu.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.1.1"
}
